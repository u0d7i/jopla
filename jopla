#!/bin/bash

SELF=$(basename $0)

# tools
SQLC="sqlite3"
SQLO=""
DIA="whiptail"

# defaults
DB=~/.config/joplin/database.sqlite
GUI=1
ACTION="list_folders"
SORT="NULL" # options: "title", "updated_time", "NULL"

usage(){
    echo "$SELF - joplin db viewer"
    echo "usage: ${SELF} [options]"
    echo "    -h | -?     this help"
    echo "    -d <dbfile> db file"
    echo "    -f          list folders"
    echo "    -F <f-id>   list notes under folder id"
    echo "    -s <field>  sort by: title,updated_time,NULL"
    exit
}

err(){
    echo "- err: $@" >&2
    exit 1
}

no_gui(){
    GUI=0
    SQLO="-separator ' '"
}

do_sql(){
    # make it work both with global variable and arg
    if [[ "$#" -eq 0 ]]; then
        ${SQLC} ${SQLO} ${DB} "${SQL}"
    else
        ${SQLC} ${SQLO} ${DB} "$@"
    fi
}

gui_calc_size(){
    if [ -z $(command -v resize) ]; then
        # resize is not available, do it manually
        COLUMNS=$(tput cols)
        LINES=$(tput lines)
        export COLUMNS LINES;
    else
        eval `resize`
    fi
    W=$(( $COLUMNS - 4 ))
    H=$(( $LINES - 4 ))
    MH=$(( $H - 8 ))
}

gui_mnu(){
    # req: $SQL, $MTITLE, $BACK
    MNU=()
    while read line; do
        IFS='|' read -a line_array <<< "${line}"
        MNU+=("${line_array[@]}")
    done <<< $(do_sql)

    gui_calc_size
    OUT=$(${DIA} --clear --notags --title "Jopla" --menu "${MTITLE}" ${H} ${W} ${MH}\
        $BACK \
        "${MNU[@]}" \
        3>&1 1>&2 2>&3)
    RET=$?
}

list_folders(){
    SQL="select id,title from folders ORDER BY ${SORT}"
    if [[ "$GUI" -eq 0 ]]; then
        do_sql
    else
        MTITLE="Folders:"
        gui_mnu
        list_notes "${OUT}"
    fi
}

list_notes(){
    # parent ID is folder
    PID=$1
    BACK="BACK <---Folders"
    SQL="select id,title from notes where parent_id='$PID' ORDER BY ${SORT}"
    if [[ "$GUI" -eq 0 ]]; then
        do_sql
    else
        MTITLE="Notes:"
        gui_mnu
        show_note "${OUT}"
    fi
}

show_note(){
    # placeholder
    echo "showing note for $1"
}

# mandatory checks
for gear in $SQLC $DIA; do
    command -v "$gear" >/dev/null 2>&1 || err "$gear not found, aborting"
done

# getopts
while getopts ":d:fF:hs:" opt; do
    case $opt in
        h)
            usage
            ;;
        d)
            DB="$OPTARG"
            ;;
        f)
            no_gui
            ACTION="list_folders"
            ;;
        F)
            no_gui
            ACTION="list_notes $OPTARG"
            ;;
        s)
            SORT="$OPTARG"
            ;;
        \?)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ ! -f ${DB} ]; then
    err "${DB} not found"
fi

SORT=$(do_sql "select value from settings where key='notes.sortOrder.field'")
SORT_REV=$(do_sql "select value from settings where key='notes.sortOrder.reverse'")
if [[ "$SORT_ORDER" -eq 1 ]]; then
    SORT="${SORT} DESC"
fi

$ACTION
