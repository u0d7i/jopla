#!/bin/bash

SELF=$(basename $0)

# tools
SQLC="sqlite3"
DIA="whiptail"

# defaults
DB=~/.config/joplin/database.sqlite
GUI=1
ACTION="list_folders"

usage(){
    echo "$SELF - joplin db viewer"
    echo "usage: ${SELF} [options]"
    echo "    -h | -?     this help"
    echo "    -d <dbfile> db file"
    echo "    -f          list folders"
    echo "    -F <f-id>   list notes under folder id"
    exit
}

err(){
    echo "- err: $@" >&2
    exit 1
}

calc_size(){
    if [ -z $(command -v resize) ]; then
        # resize is not available, do it manually
        COLUMNS=$(tput cols)
        LINES=$(tput lines)
        export COLUMNS LINES;
    else
        eval `resize`
    fi
    W=$(( $COLUMNS - 4 ))
    H=$(( $LINES - 4 ))
    MH=$(( $H - 8 ))
}

list_folders(){
    SQL="select id,title from folders"
    if [[ "$GUI" -eq 0 ]]; then
        ${SQLC} -separator " " ${DB} "${SQL}"
    else
        # take care of whitespaces in names, use arrays
        MNU=()
        while read line; do
            IFS='|' read -a line_array <<< "${line}"
            MNU+=(${line_array[@]})
        done < <(${SQLC} ${DB} "${SQL}")
        # a bit of redirect black magic here to workaround pipe subshells

        calc_size
        FLD=$(${DIA} --clear --notags --title "Jopla" --menu "Folders" ${H} ${W} ${MH}\
            ${MNU[@]} \
            3>&1 1>&2 2>&3)
        list_notes  "${FLD}"
    fi
}

list_notes(){
    # parent ID is folder
    PID=$1
    SQL="select id,title from notes where parent_id='$PID'"
    ${SQLC} -separator " " ${DB} "${SQL}"
}

# mandatory checks
for gear in $SQLC $DIA; do
    command -v "$gear" >/dev/null 2>&1 || err "$gear not found, aborting"
done

# getopts
while getopts ":d:fF:h" opt; do
    case $opt in
        h)
            usage
            ;;
        d)
            DB="$OPTARG"
            ;;
        f)
            GUI=0
            ACTION="list_folders"
            ;;
        F)
            GUI=0
            ACTION="list_notes $OPTARG"
            ;;
        \?)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ ! -f ${DB} ]; then
    err "${DB} not found"
fi

$ACTION
